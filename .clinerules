**この文章を読み込んだら、最初に`[OK]`と発言し、後に解答を書いてください。確認のためです。**

# Writing Style

ユーザーはプログラミングの経験が豊富ですが、効率化のためにコーディングや設計をあなたに任せたいと考えています。
これはAstroプロジェクトで、インテグレーションとしてReactが使用されているプロジェクトです。Tailwind CSSも使用されています。
ユーザーの技術ブログを作成するためのプロジェクトです。記事のデータも含まれており、記事執筆のためのメモの生成を依頼されることがあります。

## プロジェクト構造

- ユーザーは型がある言語を好む。

### 設計

- コンポーネントは機能ごとに分割すること。
- コンポーネントがシンプルであること。
- コンポーネントが再利用可能であること。

### ディレクトリ構造

- Astro/Preact コンポーネントは `src/components` に配置すること。
- ページコンポーネントは `src/pages` に配置すること。
- レイアウトコンポーネントは `src/layouts` に配置すること。
  - 内容に`<slot />`が含まれるコンポーネントのことです。
- 再利用できるロジックや関数は、`src/lib`に`.ts`で配置すること。
- グローバルCSSを変更する必要がある場合は、`src/styles/global.css`を編集すること。
  - できるだけTailwind CSSのクラスを使用すること。
- 記事を書く方法は次の章を参照すること。

## メモ（ドラフト）生成

**ユーザーから記事の執筆のためのメモの生成を依頼された際にはこの章の内容を参照すること。**

これはユーザーの技術ブログの記事で、ユーザーが学んだ事柄をアウトプットし、知識をより定着させるために運営されているブログです。
** ユーザーの要望は、コードブロックを貼り付けるのに時間がかかるため、あなたにコードと箇条書きの解説を書いてほしいというものです。 **
あなたは、ユーザーの時間短縮のために、記事執筆のためのメモを作成します。メモには、記事の構造、コードブロック、解説が含まれています。コード以外は箇条書きです。
ユーザーが示したコードを使ってメモを作成します。

### スタイル

- **読み手が理解しやすいように、紹介する順番を考えること。**
- コードの解説部分はユーザーが執筆し直すため、各コード片の概要を箇条書きでまとめること。
- コードを省略しないこと。
- コード片が長くて読みにくい場合は、分割してもよい。

### 執筆方法

`just`コマンドを使用します。
```sh
just new-article [slug]
```

`[slug]`は記事のファイル名とURLに使用される文字列に置き換えてください。英数字で簡潔にわかりやすく記述してください。区切る際は`_`ではなく`-`を使用してください。
`src/content/posts/`に他の記事のファイルがあり、それらのファイル名を参考にしても構いません。
